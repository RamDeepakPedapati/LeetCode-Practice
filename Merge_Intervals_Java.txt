class Solution {
    
    public int[][] merge(int[][] intervals) {
        if(intervals.length == 0 || intervals.length==1){
            return intervals;
        } 
        Comparator<int[]> customCompare = new Comparator<>(){
          
            public int compare(int[] a, int[] b){
                return a[0] - b[0];
            }
        };
        
        Arrays.sort(intervals, customCompare);
        List<int[]> ans = new ArrayList<>();
        ans.add(intervals[0]);
        
        for(int i=1;i<intervals.length;i++){ 
                int lastInterval = ans.size() -1;
                if(ans.get(lastInterval)[1] >=  intervals[i][0]){
                    ans.get(lastInterval)[1]=Math.max(ans.get(lastInterval)[1], intervals[i][1]);
                } else{
                    ans.add(intervals[i]);
                }
            }
        
        return ans.toArray(new int[ans.size()][2]);
    }
}